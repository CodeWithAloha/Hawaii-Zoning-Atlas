name: Pull and Validate Spreadsheet Data

env:
  SPREADSHEET_ID: 1YGt_Y70oy6qc09ZZ7kip9DM2JGtRC2fAHxi6JXOIsSk

on: 
  workflow_dispatch: {}
  schedule:
    - cron:  '0 10 * * *'
jobs:
  Pull-And-Merge-Spreadsheet-Data:
    runs-on: ubuntu-latest
    steps:
      - name: Pulling Maui
        working-directory: ${{ runner.temp }}
        env: 
          MAUI_SHEET_ID: '987737350'
          MAUI_FILE_NAME: 'maui.csv'
        run: |
          wget "${{ format('https://docs.google.com/spreadsheets/d/{0}/export?format=csv&gid={1}', '$SPREADSHEET_ID', '$MAUI_SHEET_ID') }}" -O $MAUI_FILE_NAME
      - name: Pulling Honolulu (Oahu)
        working-directory: ${{ runner.temp }}
        env: 
          HONOLULU_SHEET_ID: '448730928'
          HONOLULU_SHEET_NAME: 'honolulu.csv'
        run: |
          wget "${{ format('https://docs.google.com/spreadsheets/d/{0}/export?format=csv&gid={1}', '$SPREADSHEET_ID', '$HONOLULU_SHEET_ID') }}" -O $HONOLULU_SHEET_NAME
      - name: Pulling Hawaii (Big Island)
        working-directory: ${{ runner.temp }}
        env: 
          HAWAII_SHEET_ID: '835193382'
          HAWAII_SHEET_NAME: 'hawaii.csv'
        run: |
          wget "${{ format('https://docs.google.com/spreadsheets/d/{0}/export?format=csv&gid={1}', '$SPREADSHEET_ID', '$HAWAII_SHEET_ID') }}" -O $HAWAII_SHEET_NAME
      - name: Pulling Kauai
        working-directory: ${{ runner.temp }}
        env: 
          KAUAI_SHEET_ID: '1657052642'
          KAUAI_SHEET_NAME: 'kauai.csv'
        run: |
          wget "${{ format('https://docs.google.com/spreadsheets/d/{0}/export?format=csv&gid={1}', '$SPREADSHEET_ID', '$KAUAI_SHEET_ID') }}" -O $KAUAI_SHEET_NAME
      # - name: Add empty line to CSV files
      #   run: |
      #     head -n 1 test.csv > main.csv
      #     for file in *.csv; do
      #       if [ -f "$file" ]; then
      #         awk '!seen[$0]++' "$file" | sed '/^header$/d' >> main.csv
      #       fi
      #     done
      - name: Merge Island CSVs
        working-directory: ${{ runner.temp }}
        run: |
          # head -n 1 maui.csv > hawaii-zoning-data.csv && tail -n +2 -q *.csv >> hawaii-zoning-data.csv
            # head -n 1 maui.csv > hawaii-zoning-data.csv && for file in *.csv; do tail -n +2 -q "$file" >> hawaii-zoning-data.csv; done
            
            head -n 1 maui.csv > hawaii-zoning-data.csv
            for file in *.csv; do
              if [ -f "$file" ]; then
                awk '{if (NR == 1 || $0 !~ /"State",
                "Jurisdiction",
                "County",
                "Abbreviated District Name",
                "Full District Name",
                "District Mapped",
                "District Mapped But Extinct",
                "Overlay",
                "Type of Zoning District",
                "Affordable Housing District",
                "Elderly Housing District",
                "1-Family Treatment",
                "2-Family Treatment",
                "3-Family Treatment",
                "4+-Family Treatment",
                "1-Family Min. Lot (ACRES)",
                "1-Family Front Setback (# of feet)",
                "1-Family Side Setback (# of feet)",
                "1-Family Rear Setback (# of feet)",
                "1-Family Max. Lot Coverage - Buildings (%)",
                "1-Family Max. Lot Coverage - Buildings & Impervious Surface (%)",
                "1-Family Min. # Parking Spaces",
                "1-Family Max. Height (# of stories)",
                "1-Family Max. Height (# of feet)",
                "1-Family Floor to Area Ratio",
                "1-Family Min. Unit Size (SF)",
                "2-Family Affordable Housing Only",
                "2-Family Elderly Housing Only",
                "2-Family Min. Lot (ACRES)",
                "2-Family Max. Density (UNITS/ACRE)",
                "2-Family Front Setback (# of feet)",
                "2-Family Side Setback (# of feet)",
                "2-Family Rear Setback (# of feet)",
                "2-Family Max. Lot Coverage - Buildings (%)",
                "2-Family Max. Lot Coverage - Buildings & Impervious Surface (%)",
                "2-Family Min. # Parking Spaces Per Studio or 1BR",
                "2-Family Min. # Parking Spaces Per 2+ BR",
                "2-Family Max. Height (# of stories)",
                "2-Family Max. Height (# of feet)",
                "2-Family Floor to Area Ratio",
                "2-Family Min. Unit Size (SF)",
                "3-Family Affordable Housing Only",
                "3-Family Elderly Housing Only",
                "3-Family Min. Lot (ACRES)",
                "3-Family Max. Density (UNITS/ACRE)",
                "3-Family Front Setback (# of feet)",
                "3-Family Side Setback (# of feet)",
                "3-Family Rear Setback (# of feet)",
                "3-Family Max. Lot Coverage - Buildings (%)",
                "3-Family Max. Lot Coverage - Buildings & Impervious Surface (%)",
                "3-Family Min. # Parking Spaces Per Studio or 1BR",
                "3-Family Min. # Parking Spaces Per 2+ BR",
                "3-Family Connection to Sewer and/or Water Required",
                "3-Family Connection or Proximity to Public Transit Required",
                "3-Family Max. Height (# of stories)",
                "3-Family Max. Height (# of feet)",
                "3-Family Floor to Area Ratio",
                "3-Family Min. Unit Size (SF)",
                "3-Family Max. # Bedrooms Per Unit",
                "4+-Family Affordable Housing Only",
                "4+-Family Elderly Housing Only",
                "4+-Family Min. Lot (ACRES)",
                "4+-Family Max. Density (UNITS/ACRE)",
                "4+-Family Front Setback (# of feet)",
                "4+-Family Side Setback (# of feet)",
                "4+-Family Rear Setback (# of feet)",
                "4+-Family Max. Lot Coverage - Buildings (%)",
                "4+-Family Max. Lot Coverage - Buildings & Impervious Surface (%)",
                "4+-Family Min. # Parking Spaces Per Studio or 1BR",
                "4+-Family Min. # Parking Spaces Per 2+ BR",
                "4+-Family Connection to Sewer and/or Water Required",
                "4+-Family Connection or Proximity to Public Transit Required",
                "4+-Family Max. Height (# of stories)",
                "4+-Family Max. Height (# of feet)",
                "4+-Family Floor to Area Ratio",
                "4+-Family Min. Unit Size (SF)",
                "4+-Family Max. # Bedrooms Per Unit",
                "4+-Family Max. # Units Per Building",
                "Affordable Housing (AH) Treatment",
                "AH - Definition",
                "AH - Elderly Housing Only",
                "AH Min. Lot (ACRES)",
                "AH Max. Density (UNITS/ACRE)",
                "AH Min. # Parking Spaces Per Studio or 1BR",
                "AH Min. # Parking Spaces Per 2+ BR",
                "AH Connection to Sewer and/or Water Required",
                "AH Connection or Proximity to Public Transit Required",
                "AH Min. Unit Size (SF)",
                "AH Max. # Bedrooms Per Unit",
                "AH Max. # Units Per  Building",
                "Accessory Dwelling Unit (ADU) Treatment",
                "ADU Employee or Family Occupancy Required",
                "ADU Renter Occupancy Prohibited",
                "ADU Owner Occupancy Required",
                "ADU Elderly Housing Only",
                "ADU Min. Lot (acres)",
                "ADU Min. # Parking Spaces (Additional to Main Unit)",
                '"ADU Restricted to Only Primary Structure (i.e., No Outbuildings like Garages)"',
                "ADU Max. Size (% of Main Unit)",
                "ADU Max. Size (SF)",
                "ADU Max. # Bedrooms Per Unit",
                "Planned Residential Development (PRD) Treatment",
                "Mobile or Manufactured Home Park (Y/N)",
                "PRD Min. Lot (Acres)",
                "PRD Max. Density (Units/Acre)",
                "PRD Max. # Units Per Development",
                "Special Notes",
                "Tooltip Notes",/) print}' "$file" | sed '/^$/d'  > hawaii-zoning-data.csv
              fi
            done
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: hawaii-zoning-data.csv
          path: ${{ runner.temp }}/hawaii-zoning-data.csv
  Validate-Data:
    needs: Pull-And-Merge-Spreadsheet-Data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install csvkit
        run: |
          pip install csvkit
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: hawaii-zoning-data.csv
      - name: Validate Data # Not doing any real validation, just outputting csvclean results to detect any surface problems
        run: |
          csvclean -n hawaii-zoning-data.csv

  Validate-CSV:
    needs: Validate-Data
    runs-on: ubuntu-latest
    steps:
    - uses: 'actions/checkout@v3'

    - name: Set up Python 3
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install petl
      working-directory: data-pipeline/csv-validation
      run: |
        pip install -r ./requirements.txt
    - name: Run Validation
      working-directory: data-pipeline/csv-validation
      run: |
        python validation.py
      
    
  Commit-Data:
    needs: Validate-CSV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: hawaii-zoning-data.csv
      - name: Get current date
        run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Move Artifact
        run:
          mv hawaii-zoning-data.csv data/
      - name: Commit to repo
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "there are changes to commit";
          else
            exit 0;
          fi

          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add data/hawaii-zoning-data.csv
          git commit -m "Spreadsheet data update ${{ env.NOW }}"
          git push